 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    List<Integer> res=new ArrayList();
    public List<Integer> rightSideView(TreeNode root) {
        dfs(root,0);//从根节点开始访问，根节点深度是0
        return res;
    }

    private void dfs(TreeNode root,int depth){
        if(root==null){
            return ;
        }
        if(depth==res.size()){  //如果当前节点所在深度还没有出现在res里，说明该深度下当前节点是第一个被访问的节点，因此将当前节点加入res中
            res.add(root.val);
        }
        depth++;
        dfs(root.right,depth);
        dfs(root.left,depth);
    }
}
